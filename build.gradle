buildscript {
  repositories {
    jcenter()
  }
}

plugins {
  id 'nebula.netflixoss' version '3.5.0'
}

allprojects {
  group = 'com.netflix.buildinfrastructure'
  ext {
    netflixossAltCandidateRepo = true
  }
}

subprojects {
  apply plugin: 'nebula.netflixoss'

  contacts {
    "rob.spieldenner@gmail.com" {
      moniker "Rob Spieldenner"
      github "rspieldenner"
    }
  }

  repositories {
    jcenter()
  }

  if (project.hasProperty('internalUrl') && project.hasProperty('internalUser') && project.hasProperty('internalCredential')) {
    publishing {
      repositories {
        maven {
          name 'internal'
          url project.property('internalUrl')
          credentials {
            username project.property('internalUser')
            password project.property('internalCredential')
          }
        }
      }
    }

    afterEvaluate {
      tasks.withType(com.jfrog.bintray.gradle.BintrayUploadTask) { t ->
          t.enabled = false
      }
      tasks.withType(org.jfrog.gradle.plugin.artifactory.task.BuildInfoBaseTask) { t ->
          t.enabled = false
      }
    }
  }
}

allprojects {
  //bintray.pkg.repo = 'BuildTesting' // used for testing
}
